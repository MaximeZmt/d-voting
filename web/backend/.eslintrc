{
    "env": {
        "node": true,
        "es2021": true,
        "jest": true
    },
    "extends": [
        "airbnb-base",
        "airbnb-typescript/base",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:prettier/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": ["./tsconfig.json"]
    },
    "plugins": ["@typescript-eslint", "jest"],
    "root": true,
    "rules": {
        "import/extensions": ["error", "ignorePackages", {
            "js": "never",
            "ts": "never"
        }],

        "import/no-extraneous-dependencies": ["error", {"devDependencies": [
            "**/*.test.ts"
        ]}],

        // conflicts with the index.ts (eslint prefers default exports which are not compatible with index.ts)
        "import/prefer-default-export": "off",

        // allow the usage of console output for debugging purposes
        "no-console": "off",

        // disable object shorthand
        "object-shorthand": "off",

        "no-restricted-syntax": [
            "error",
            {
                "selector": "ForInStatement",
                "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
            },
            {
                "selector": "LabeledStatement",
                "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
            },
            {
                "selector": "WithStatement",
                "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize.",
            },
        ]
    },
    // we disable import/extensions eslint errors. Eslint underlines every import due to an
    // bug between typescript and eslint using the airbnb config
    "settings": {
        "import/resolver": {
            "node": {
                "extensions": [".js", ".ts", ".json"]
            }
        }
    },
    "ignorePatterns": [
        "babel.config.js",
        "jest.config.js"
    ]
}
